import telebot
from bs4 import BeautifulSoup
import requests
from random import randint


token = ''
bot = telebot.TeleBot(token)
url_rf = 'https://index.minfin.com.ua/reference/coronavirus/geography/russia/'


@bot.message_handler(commands=['start'])
def first_message(message):
    """Greeting and keyboard output."""
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–∏—Ä—É', '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –†–æ—Å—Å–∏–∏')
    keyboard.row('–ó–∞—Ä–∞–∂—ë–Ω –ª–∏ —è?')
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —á—Ç–æ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å?',
                     reply_markup=keyboard)


@bot.message_handler(regexp='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –†–æ—Å—Å–∏–∏')
def stats_rf(message):
    """ It displays statistics on coronavirus from the website of
        the Ministry of Finance, but for Russia.
    """
    requ_rf = requests.get(url_rf)
    soup = BeautifulSoup(requ_rf.content, 'html.parser')
    stats_all = soup.find('strong', class_='black').text
    stats_dead = soup.find('strong', class_='red').text
    stats_healthy = soup.find('strong', class_='green').text
    bot.send_message(message.chat.id, 'üá∑üá∫üò∑–í—Å–µ–≥–æ –∑–∞–±–æ–ª–µ–≤—à–∏—Ö - ' + stats_all)
    bot.send_message(message.chat.id, 'üá∑üá∫üíÄ–°–º–µ—Ä—Ç–µ–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏ - ' + stats_dead)
    bot.send_message(message.chat.id, 'üá∑üá∫‚ú®–í—ã–∑–¥–æ—Ä–æ¬≠–≤–µ–≤—à–∏–µ - ' + stats_healthy)


@bot.message_handler(regexp='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–∏—Ä—É')
def stats_global(message):
    """ Displays statistics on coronavirus from the website of
        the Ministry of Finance.
    """
    requ_gl = requests.get('https://index.minfin.com.ua/reference/coronavirus')
    soup = BeautifulSoup(requ_gl.content, 'html.parser')
    stats_all = soup.find('strong', class_='black').text
    stats_dead = soup.find('strong', class_='red').text
    stats_healthy = soup.find('strong', class_='green').text
    bot.send_message(message.chat.id, 'üò∑–í—Å–µ–≥–æ –∑–∞–±–æ–ª–µ–≤—à–∏—Ö - ' + stats_all)
    bot.send_message(message.chat.id, 'üíÄ–°–º–µ—Ä—Ç–µ–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏ - ' + stats_dead)
    bot.send_message(message.chat.id, '‚ú®–í—ã–∑–¥–æ—Ä–æ¬≠–≤–µ–≤—à–∏–µ - ' + stats_healthy)


@bot.message_handler(regexp='–ó–∞—Ä–∞–∂—ë–Ω –ª–∏ —è?')
def corona_test(message):
    """With a 50 to 50 chance, it shows your result on coronavirus."""
    markup = telebot.types.InlineKeyboardMarkup()
    markup.add(telebot.types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—â—ë —Ä–∞–∑',
                                                  callback_data='yes'))
    rand = randint(0, 11)
    if rand >= 5:
        bot.send_photo(message.chat.id, 'https://clck.ru/MkPER',
                       reply_markup=markup)
    else:
        bot.send_message(message.chat.id, '–°–µ–π—á–∞—Å - –Ω–µ—Çü¶†',
                                          reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def query_handler(call):
    """Re-conducting a coronavirus test."""
    if call.data == 'yes':
        bot.delete_message(call.message.chat.id, call.message.message_id)
        # –£–¥–∞–ª—è–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å
        markup = telebot.types.InlineKeyboardMarkup()
        markup.add(telebot.types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—â—ë —Ä–∞–∑',
                                                      callback_data='yes'))
        rand = randint(0, 11)
        if rand >= 5:
            bot.send_photo(call.message.chat.id, 'https://clck.ru/MkPER',
                           reply_markup=markup)
        else:
            bot.send_message(call.message.chat.id, '–°–µ–π—á–∞—Å - –Ω–µ—Çü¶†',
                             reply_markup=markup)


@bot.message_handler(commands=['info'])
def what(message):
    """Information about the bot."""
    bot.send_message(message.chat.id, 'ü§ëMy bitcoin walletü§ë\
                                       1FLApcQPyJVmf3uevcN2JiXWpWD86xEVod')


@bot.message_handler(content_types=['text'])
def wrong_command(message):
    """Unknown message."""
    bot.send_message(message.chat.id, '???????????????????')


if __name__ == '__main__':
    bot.infinity_polling()
